#lang plai

;Problem 1:
;Solved by myself: Y
;Time taken: about 2 mins
;[contract] dollar->won: number-> number
;[purpose]: To convert dollar to won
;[tests]:
;(test (dollar->won 1) 1162)
;(test (dollar->won 5) 5810)
(define (dollar->won d)(* d 1162))

(test (dollar->won 1) 1162)
(test (dollar->won 5) 5810)

;Problem 2:
;Solved by myself: Y
;Time taken: about 2 mins
;[contract] digit_sum: number number number -> number
;[purpose]: To sum three integer numbers
;[tests]:
;(test (digit_sum 1 2 3) 6)
;(test (digit_sum 10 2 3) 15)

(define (digit_sum a b c)(+ a b c))

(test (digit_sum 1 2 3) 6)
(test (digit_sum 10 2 3) 15)

;Problem 3:
;Solved by myself: Y
;Time taken: about 2 mins
;[contract] inchworm-travel: number number -> number
;[purpose]: To get the distance an Inchworm can travel in that time in centimeters
;[tests]:
;(test (inchworm-travel 1 2) 5.08)
;(test (inchworm-travel 5 2) 25.4)
(define (inchworm-travel n hours)(* n hours 2.54))

(test (inchworm-travel 1 2) 5.08)
(test (inchworm-travel 5 2) 25.4)


;Problem 4:
;Solved by myself: Y
;Time taken: about 2 mins
;[contract] inchworm-travel: number -> boolean
;[purpose]: To know if n is an odd number
;[tests]:
;(test (is-odd 3) #t)
;(test (is-odd 4) #f)
(define (is-odd? n)(odd? n))

(test (is-odd? 3) #t)
(test (is-odd? 4) #f)

;Problem 5
;Solved by myself: Y
;Time taken: about 2 mins
;[contract] inchworm-travel: number -> boolean
;[purpose]: To know if n is an odd number
;[tests]:
;(test (is-odd 3) #t)
;(test (is-odd 4) #f)
